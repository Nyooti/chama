{"ast":null,"code":"import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Unauthorized - clear token and redirect to login\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) >= 500) {\n    // Server error\n    toast.error('Server error. Please try again later.');\n  } else if (!error.response) {\n    // Network error\n    toast.error('Network error. Please check your connection.');\n  }\n  return Promise.reject(error);\n});\n\n// API helper functions\nexport const apiHelpers = {\n  // Generic CRUD operations\n  get: (url, config = {}) => api.get(url, config),\n  post: (url, data, config = {}) => api.post(url, data, config),\n  put: (url, data, config = {}) => api.put(url, data, config),\n  patch: (url, data, config = {}) => api.patch(url, data, config),\n  delete: (url, config = {}) => api.delete(url, config),\n  // Auth endpoints\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  refreshToken: () => api.post('/auth/refresh'),\n  // User endpoints\n  getProfile: () => api.get('/user/profile'),\n  updateProfile: data => api.put('/user/profile', data),\n  changePassword: data => api.patch('/user/password', data),\n  // Chama endpoints\n  getChamas: (params = {}) => api.get('/chamas', {\n    params\n  }),\n  getChama: id => api.get(`/chamas/${id}`),\n  createChama: data => api.post('/chamas', data),\n  updateChama: (id, data) => api.put(`/chamas/${id}`, data),\n  deleteChama: id => api.delete(`/chamas/${id}`),\n  joinChama: (id, data) => api.post(`/chamas/${id}/join`, data),\n  leaveChama: id => api.post(`/chamas/${id}/leave`),\n  // Contribution endpoints\n  getContributions: (params = {}) => api.get('/contributions', {\n    params\n  }),\n  getContribution: id => api.get(`/contributions/${id}`),\n  createContribution: data => api.post('/contributions', data),\n  updateContribution: (id, data) => api.put(`/contributions/${id}`, data),\n  deleteContribution: id => api.delete(`/contributions/${id}`),\n  // Loan endpoints\n  getLoans: (params = {}) => api.get('/loans', {\n    params\n  }),\n  getLoan: id => api.get(`/loans/${id}`),\n  createLoan: data => api.post('/loans', data),\n  updateLoan: (id, data) => api.put(`/loans/${id}`, data),\n  deleteLoan: id => api.delete(`/loans/${id}`),\n  approveLoan: (id, data) => api.patch(`/loans/${id}/approve`, data),\n  rejectLoan: (id, data) => api.patch(`/loans/${id}/reject`, data),\n  // Meeting endpoints\n  getMeetings: (params = {}) => api.get('/meetings', {\n    params\n  }),\n  getMeeting: id => api.get(`/meetings/${id}`),\n  createMeeting: data => api.post('/meetings', data),\n  updateMeeting: (id, data) => api.put(`/meetings/${id}`, data),\n  deleteMeeting: id => api.delete(`/meetings/${id}`),\n  // Report endpoints\n  getFinancialReport: (params = {}) => api.get('/reports/financial', {\n    params\n  }),\n  getContributionReport: (params = {}) => api.get('/reports/contributions', {\n    params\n  }),\n  getLoanReport: (params = {}) => api.get('/reports/loans', {\n    params\n  }),\n  // Notification endpoints\n  getNotifications: (params = {}) => api.get('/notifications', {\n    params\n  }),\n  markNotificationRead: id => api.patch(`/notifications/${id}/read`),\n  markAllNotificationsRead: () => api.patch('/notifications/read-all'),\n  deleteNotification: id => api.delete(`/notifications/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","toast","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","removeItem","window","location","href","apiHelpers","get","url","post","data","put","patch","delete","login","credentials","register","userData","logout","refreshToken","getProfile","updateProfile","changePassword","getChamas","params","getChama","id","createChama","updateChama","deleteChama","joinChama","leaveChama","getContributions","getContribution","createContribution","updateContribution","deleteContribution","getLoans","getLoan","createLoan","updateLoan","deleteLoan","approveLoan","rejectLoan","getMeetings","getMeeting","createMeeting","updateMeeting","deleteMeeting","getFinancialReport","getContributionReport","getLoanReport","getNotifications","markNotificationRead","markAllNotificationsRead","deleteNotification"],"sources":["/home/nyooti/Desktop/chama/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Unauthorized - clear token and redirect to login\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    } else if (error.response?.status >= 500) {\n      // Server error\n      toast.error('Server error. Please try again later.');\n    } else if (!error.response) {\n      // Network error\n      toast.error('Network error. Please check your connection.');\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API helper functions\nexport const apiHelpers = {\n  // Generic CRUD operations\n  get: (url, config = {}) => api.get(url, config),\n  post: (url, data, config = {}) => api.post(url, data, config),\n  put: (url, data, config = {}) => api.put(url, data, config),\n  patch: (url, data, config = {}) => api.patch(url, data, config),\n  delete: (url, config = {}) => api.delete(url, config),\n\n  // Auth endpoints\n  login: (credentials) => api.post('/auth/login', credentials),\n  register: (userData) => api.post('/auth/register', userData),\n  logout: () => api.post('/auth/logout'),\n  refreshToken: () => api.post('/auth/refresh'),\n\n  // User endpoints\n  getProfile: () => api.get('/user/profile'),\n  updateProfile: (data) => api.put('/user/profile', data),\n  changePassword: (data) => api.patch('/user/password', data),\n\n  // Chama endpoints\n  getChamas: (params = {}) => api.get('/chamas', { params }),\n  getChama: (id) => api.get(`/chamas/${id}`),\n  createChama: (data) => api.post('/chamas', data),\n  updateChama: (id, data) => api.put(`/chamas/${id}`, data),\n  deleteChama: (id) => api.delete(`/chamas/${id}`),\n  joinChama: (id, data) => api.post(`/chamas/${id}/join`, data),\n  leaveChama: (id) => api.post(`/chamas/${id}/leave`),\n\n  // Contribution endpoints\n  getContributions: (params = {}) => api.get('/contributions', { params }),\n  getContribution: (id) => api.get(`/contributions/${id}`),\n  createContribution: (data) => api.post('/contributions', data),\n  updateContribution: (id, data) => api.put(`/contributions/${id}`, data),\n  deleteContribution: (id) => api.delete(`/contributions/${id}`),\n\n  // Loan endpoints\n  getLoans: (params = {}) => api.get('/loans', { params }),\n  getLoan: (id) => api.get(`/loans/${id}`),\n  createLoan: (data) => api.post('/loans', data),\n  updateLoan: (id, data) => api.put(`/loans/${id}`, data),\n  deleteLoan: (id) => api.delete(`/loans/${id}`),\n  approveLoan: (id, data) => api.patch(`/loans/${id}/approve`, data),\n  rejectLoan: (id, data) => api.patch(`/loans/${id}/reject`, data),\n\n  // Meeting endpoints\n  getMeetings: (params = {}) => api.get('/meetings', { params }),\n  getMeeting: (id) => api.get(`/meetings/${id}`),\n  createMeeting: (data) => api.post('/meetings', data),\n  updateMeeting: (id, data) => api.put(`/meetings/${id}`, data),\n  deleteMeeting: (id) => api.delete(`/meetings/${id}`),\n\n  // Report endpoints\n  getFinancialReport: (params = {}) => api.get('/reports/financial', { params }),\n  getContributionReport: (params = {}) => api.get('/reports/contributions', { params }),\n  getLoanReport: (params = {}) => api.get('/reports/loans', { params }),\n\n  // Notification endpoints\n  getNotifications: (params = {}) => api.get('/notifications', { params }),\n  markNotificationRead: (id) => api.patch(`/notifications/${id}/read`),\n  markAllNotificationsRead: () => api.patch('/notifications/read-all'),\n  deleteNotification: (id) => api.delete(`/notifications/${id}`),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}